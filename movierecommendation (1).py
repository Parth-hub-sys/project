# -*- coding: utf-8 -*-
"""MovieRecommendation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hu0k7zdEXo_hi_rz0njIjx_FKmK1PGgJ
"""

import pandas as pd

import numpy as np

df = pd.read_csv(r'https://raw.githubusercontent.com/YBI-Foundation/Dataset/main/Movies%20Recommendation.csv')

https://github.com/YBI-Foundation/Dataset/raw/main/Movies%20Recommendation.csv

df.info()

df.shape

df.columns

df_feature = df[['Movie_Genre','Movie_Keywords','Movie_Tagline','Movie_Cast','Movie_Director']].fillna('')

df_feature.shape

df_feature

x= df_feature['Movie_Genre']+' '+df_feature['Movie_Keywords']+' '+df_feature['Movie_Tagline']+' '+df_feature['Movie_Cast']+' '+df_feature['Movie_Director']

x.shape

from sklearn.feature_extraction.text import TfidfVectorizer

tfidf = TfidfVectorizer()

x = tfidf.fit_transform(x)

x.shape

print(x)

from sklearn.metrics.pairwise import cosine_similarity

similarity_score = cosine_similarity(x)

similarity_score

similarity_score.shape

Fav_movie_name = input('enter movie name')

all_movie_title_list = df['Movie_Title'].tolist()

import difflib

movie_recommendation = difflib.get_close_matches(Fav_movie_name,all_movie_title_list)
print(movie_recommendation)

close_match = movie_recommendation[0]
print(close_match)

index_of_close_match_movie = df[df.Movie_Title == close_match]['Movie_ID'].values[0]
print(index_of_close_match_movie)

recommendation_score = list(enumerate(similarity_score[index_of_close_match_movie]))

len(recommendation_score)

sorted_similar_movies = sorted(recommendation_score,key = lambda x:x[1], reverse= True)
print(sorted_similar_movies)

print(" top 30 movies")
i =1
for movie in sorted_similar_movies:
  index = movie[0]
  title_from_index = df[df.index == index]['Movie_Title'].values[0]
  if(i<31):
    print(i, '.',title_from_index)
    i+=1